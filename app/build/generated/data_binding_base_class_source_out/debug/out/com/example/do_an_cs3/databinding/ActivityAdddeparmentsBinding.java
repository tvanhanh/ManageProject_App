// Generated by view binder compiler. Do not edit!
package com.example.do_an_cs3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.do_an_cs3.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdddeparmentsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addDdepertment;

  @NonNull
  public final Button buttonComback;

  @NonNull
  public final Button buttonHome;

  @NonNull
  public final Button buttondatejob;

  @NonNull
  public final EditText editTextname;

  @NonNull
  public final EditText editTextnumericalOrder;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView logo;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView6;

  @NonNull
  public final TextView textView7;

  private ActivityAdddeparmentsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button addDdepertment, @NonNull Button buttonComback, @NonNull Button buttonHome,
      @NonNull Button buttondatejob, @NonNull EditText editTextname,
      @NonNull EditText editTextnumericalOrder, @NonNull LinearLayout linearLayout,
      @NonNull TextView logo, @NonNull TextView textView3, @NonNull TextView textView6,
      @NonNull TextView textView7) {
    this.rootView = rootView;
    this.addDdepertment = addDdepertment;
    this.buttonComback = buttonComback;
    this.buttonHome = buttonHome;
    this.buttondatejob = buttondatejob;
    this.editTextname = editTextname;
    this.editTextnumericalOrder = editTextnumericalOrder;
    this.linearLayout = linearLayout;
    this.logo = logo;
    this.textView3 = textView3;
    this.textView6 = textView6;
    this.textView7 = textView7;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdddeparmentsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdddeparmentsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_adddeparments, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdddeparmentsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addDdepertment;
      Button addDdepertment = ViewBindings.findChildViewById(rootView, id);
      if (addDdepertment == null) {
        break missingId;
      }

      id = R.id.buttonComback;
      Button buttonComback = ViewBindings.findChildViewById(rootView, id);
      if (buttonComback == null) {
        break missingId;
      }

      id = R.id.buttonHome;
      Button buttonHome = ViewBindings.findChildViewById(rootView, id);
      if (buttonHome == null) {
        break missingId;
      }

      id = R.id.buttondatejob;
      Button buttondatejob = ViewBindings.findChildViewById(rootView, id);
      if (buttondatejob == null) {
        break missingId;
      }

      id = R.id.editTextname;
      EditText editTextname = ViewBindings.findChildViewById(rootView, id);
      if (editTextname == null) {
        break missingId;
      }

      id = R.id.editTextnumerical_order;
      EditText editTextnumericalOrder = ViewBindings.findChildViewById(rootView, id);
      if (editTextnumericalOrder == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.logo;
      TextView logo = ViewBindings.findChildViewById(rootView, id);
      if (logo == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      id = R.id.textView7;
      TextView textView7 = ViewBindings.findChildViewById(rootView, id);
      if (textView7 == null) {
        break missingId;
      }

      return new ActivityAdddeparmentsBinding((ConstraintLayout) rootView, addDdepertment,
          buttonComback, buttonHome, buttondatejob, editTextname, editTextnumericalOrder,
          linearLayout, logo, textView3, textView6, textView7);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
