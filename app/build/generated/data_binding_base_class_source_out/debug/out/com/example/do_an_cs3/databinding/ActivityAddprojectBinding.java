// Generated by view binder compiler. Do not edit!
package com.example.do_an_cs3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.do_an_cs3.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddprojectBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BottomNavigationView bottomnavigation;

  @NonNull
  public final Button btnback;

  @NonNull
  public final Button butonThenext;

  @NonNull
  public final Button buttonHome;

  @NonNull
  public final Button buttonaddPerson;

  @NonNull
  public final Button buttonaddTime;

  @NonNull
  public final Button buttondatejob;

  @NonNull
  public final EditText editAddNameProject;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView logo;

  @NonNull
  public final TextInputEditText textInputEditTextDescription;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textViewDate;

  private ActivityAddprojectBinding(@NonNull ConstraintLayout rootView,
      @NonNull BottomNavigationView bottomnavigation, @NonNull Button btnback,
      @NonNull Button butonThenext, @NonNull Button buttonHome, @NonNull Button buttonaddPerson,
      @NonNull Button buttonaddTime, @NonNull Button buttondatejob,
      @NonNull EditText editAddNameProject, @NonNull LinearLayout linearLayout,
      @NonNull TextView logo, @NonNull TextInputEditText textInputEditTextDescription,
      @NonNull TextView textView3, @NonNull TextView textViewDate) {
    this.rootView = rootView;
    this.bottomnavigation = bottomnavigation;
    this.btnback = btnback;
    this.butonThenext = butonThenext;
    this.buttonHome = buttonHome;
    this.buttonaddPerson = buttonaddPerson;
    this.buttonaddTime = buttonaddTime;
    this.buttondatejob = buttondatejob;
    this.editAddNameProject = editAddNameProject;
    this.linearLayout = linearLayout;
    this.logo = logo;
    this.textInputEditTextDescription = textInputEditTextDescription;
    this.textView3 = textView3;
    this.textViewDate = textViewDate;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddprojectBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddprojectBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_addproject, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddprojectBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomnavigation;
      BottomNavigationView bottomnavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomnavigation == null) {
        break missingId;
      }

      id = R.id.btnback;
      Button btnback = ViewBindings.findChildViewById(rootView, id);
      if (btnback == null) {
        break missingId;
      }

      id = R.id.butonThenext;
      Button butonThenext = ViewBindings.findChildViewById(rootView, id);
      if (butonThenext == null) {
        break missingId;
      }

      id = R.id.buttonHome;
      Button buttonHome = ViewBindings.findChildViewById(rootView, id);
      if (buttonHome == null) {
        break missingId;
      }

      id = R.id.buttonaddPerson;
      Button buttonaddPerson = ViewBindings.findChildViewById(rootView, id);
      if (buttonaddPerson == null) {
        break missingId;
      }

      id = R.id.buttonaddTime;
      Button buttonaddTime = ViewBindings.findChildViewById(rootView, id);
      if (buttonaddTime == null) {
        break missingId;
      }

      id = R.id.buttondatejob;
      Button buttondatejob = ViewBindings.findChildViewById(rootView, id);
      if (buttondatejob == null) {
        break missingId;
      }

      id = R.id.editAddNameProject;
      EditText editAddNameProject = ViewBindings.findChildViewById(rootView, id);
      if (editAddNameProject == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.logo;
      TextView logo = ViewBindings.findChildViewById(rootView, id);
      if (logo == null) {
        break missingId;
      }

      id = R.id.textInputEditTextDescription;
      TextInputEditText textInputEditTextDescription = ViewBindings.findChildViewById(rootView, id);
      if (textInputEditTextDescription == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textViewDate;
      TextView textViewDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewDate == null) {
        break missingId;
      }

      return new ActivityAddprojectBinding((ConstraintLayout) rootView, bottomnavigation, btnback,
          butonThenext, buttonHome, buttonaddPerson, buttonaddTime, buttondatejob,
          editAddNameProject, linearLayout, logo, textInputEditTextDescription, textView3,
          textViewDate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
