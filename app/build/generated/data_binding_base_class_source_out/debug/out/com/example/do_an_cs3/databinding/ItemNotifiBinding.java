// Generated by view binder compiler. Do not edit!
package com.example.do_an_cs3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.do_an_cs3.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemNotifiBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CircleImageView imgUser;

  @NonNull
  public final TextView tvContent;

  @NonNull
  public final TextView tvEmailSend;

  @NonNull
  public final TextView tvNameNoti;

  @NonNull
  public final TextView tvNameSend;

  private ItemNotifiBinding(@NonNull CardView rootView, @NonNull CircleImageView imgUser,
      @NonNull TextView tvContent, @NonNull TextView tvEmailSend, @NonNull TextView tvNameNoti,
      @NonNull TextView tvNameSend) {
    this.rootView = rootView;
    this.imgUser = imgUser;
    this.tvContent = tvContent;
    this.tvEmailSend = tvEmailSend;
    this.tvNameNoti = tvNameNoti;
    this.tvNameSend = tvNameSend;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemNotifiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemNotifiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_notifi, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemNotifiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.img_user;
      CircleImageView imgUser = ViewBindings.findChildViewById(rootView, id);
      if (imgUser == null) {
        break missingId;
      }

      id = R.id.tvContent;
      TextView tvContent = ViewBindings.findChildViewById(rootView, id);
      if (tvContent == null) {
        break missingId;
      }

      id = R.id.tvEmailSend;
      TextView tvEmailSend = ViewBindings.findChildViewById(rootView, id);
      if (tvEmailSend == null) {
        break missingId;
      }

      id = R.id.tvNameNoti;
      TextView tvNameNoti = ViewBindings.findChildViewById(rootView, id);
      if (tvNameNoti == null) {
        break missingId;
      }

      id = R.id.tvNameSend;
      TextView tvNameSend = ViewBindings.findChildViewById(rootView, id);
      if (tvNameSend == null) {
        break missingId;
      }

      return new ItemNotifiBinding((CardView) rootView, imgUser, tvContent, tvEmailSend, tvNameNoti,
          tvNameSend);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
