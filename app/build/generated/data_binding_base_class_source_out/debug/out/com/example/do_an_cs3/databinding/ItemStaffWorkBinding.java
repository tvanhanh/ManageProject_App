// Generated by view binder compiler. Do not edit!
package com.example.do_an_cs3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.do_an_cs3.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemStaffWorkBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView PossitonAndEmail;

  @NonNull
  public final Button addTask;

  @NonNull
  public final CircleImageView circleImageViewWork;

  @NonNull
  public final TextView userNameWork;

  private ItemStaffWorkBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView PossitonAndEmail, @NonNull Button addTask,
      @NonNull CircleImageView circleImageViewWork, @NonNull TextView userNameWork) {
    this.rootView = rootView;
    this.PossitonAndEmail = PossitonAndEmail;
    this.addTask = addTask;
    this.circleImageViewWork = circleImageViewWork;
    this.userNameWork = userNameWork;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemStaffWorkBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemStaffWorkBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_staff_work, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemStaffWorkBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.PossitonAndEmail;
      TextView PossitonAndEmail = ViewBindings.findChildViewById(rootView, id);
      if (PossitonAndEmail == null) {
        break missingId;
      }

      id = R.id.addTask;
      Button addTask = ViewBindings.findChildViewById(rootView, id);
      if (addTask == null) {
        break missingId;
      }

      id = R.id.circleImageViewWork;
      CircleImageView circleImageViewWork = ViewBindings.findChildViewById(rootView, id);
      if (circleImageViewWork == null) {
        break missingId;
      }

      id = R.id.userNameWork;
      TextView userNameWork = ViewBindings.findChildViewById(rootView, id);
      if (userNameWork == null) {
        break missingId;
      }

      return new ItemStaffWorkBinding((ConstraintLayout) rootView, PossitonAndEmail, addTask,
          circleImageViewWork, userNameWork);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
