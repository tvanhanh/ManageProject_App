// Generated by view binder compiler. Do not edit!
package com.example.do_an_cs3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.do_an_cs3.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTaskBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView NamePersonOfTaskUpdate;

  @NonNull
  public final TextView NameTaskNewUpdate1;

  @NonNull
  public final CircleImageView avatarPartiTask;

  @NonNull
  public final TextView contentTask;

  @NonNull
  public final TextView options;

  @NonNull
  public final TextView timeUpdateTask;

  @NonNull
  public final TextView tvDealine;

  @NonNull
  public final TextView userDO;

  @NonNull
  public final TextView userNameDo;

  private ItemTaskBinding(@NonNull CardView rootView, @NonNull TextView NamePersonOfTaskUpdate,
      @NonNull TextView NameTaskNewUpdate1, @NonNull CircleImageView avatarPartiTask,
      @NonNull TextView contentTask, @NonNull TextView options, @NonNull TextView timeUpdateTask,
      @NonNull TextView tvDealine, @NonNull TextView userDO, @NonNull TextView userNameDo) {
    this.rootView = rootView;
    this.NamePersonOfTaskUpdate = NamePersonOfTaskUpdate;
    this.NameTaskNewUpdate1 = NameTaskNewUpdate1;
    this.avatarPartiTask = avatarPartiTask;
    this.contentTask = contentTask;
    this.options = options;
    this.timeUpdateTask = timeUpdateTask;
    this.tvDealine = tvDealine;
    this.userDO = userDO;
    this.userNameDo = userNameDo;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTaskBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTaskBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_task, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTaskBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.NamePersonOfTaskUpdate;
      TextView NamePersonOfTaskUpdate = ViewBindings.findChildViewById(rootView, id);
      if (NamePersonOfTaskUpdate == null) {
        break missingId;
      }

      id = R.id.NameTaskNewUpdate1;
      TextView NameTaskNewUpdate1 = ViewBindings.findChildViewById(rootView, id);
      if (NameTaskNewUpdate1 == null) {
        break missingId;
      }

      id = R.id.avatarPartiTask;
      CircleImageView avatarPartiTask = ViewBindings.findChildViewById(rootView, id);
      if (avatarPartiTask == null) {
        break missingId;
      }

      id = R.id.contentTask;
      TextView contentTask = ViewBindings.findChildViewById(rootView, id);
      if (contentTask == null) {
        break missingId;
      }

      id = R.id.options;
      TextView options = ViewBindings.findChildViewById(rootView, id);
      if (options == null) {
        break missingId;
      }

      id = R.id.timeUpdateTask;
      TextView timeUpdateTask = ViewBindings.findChildViewById(rootView, id);
      if (timeUpdateTask == null) {
        break missingId;
      }

      id = R.id.tvDealine;
      TextView tvDealine = ViewBindings.findChildViewById(rootView, id);
      if (tvDealine == null) {
        break missingId;
      }

      id = R.id.userDO;
      TextView userDO = ViewBindings.findChildViewById(rootView, id);
      if (userDO == null) {
        break missingId;
      }

      id = R.id.userNameDo;
      TextView userNameDo = ViewBindings.findChildViewById(rootView, id);
      if (userNameDo == null) {
        break missingId;
      }

      return new ItemTaskBinding((CardView) rootView, NamePersonOfTaskUpdate, NameTaskNewUpdate1,
          avatarPartiTask, contentTask, options, timeUpdateTask, tvDealine, userDO, userNameDo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
